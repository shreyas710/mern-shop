[{"D:\\mern\\mern-shop\\project\\frontend\\src\\index.js":"1","D:\\mern\\mern-shop\\project\\frontend\\src\\reportWebVitals.js":"2","D:\\mern\\mern-shop\\project\\frontend\\src\\App.js":"3","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Layout.js":"4","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Header.js":"5","D:\\mern\\mern-shop\\project\\frontend\\src\\pages\\CustsSignUpForm.js":"6","D:\\mern\\mern-shop\\project\\frontend\\src\\pages\\ShopLoginForm.js":"7","D:\\mern\\mern-shop\\project\\frontend\\src\\pages\\ShopSignUpForm.js":"8","D:\\mern\\mern-shop\\project\\frontend\\src\\pages\\CustsLoginForm.js":"9","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\index.js":"10","D:\\mern\\mern-shop\\project\\frontend\\src\\contexts\\SearchContext.js":"11","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Footer.js":"12","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Sidebar.js":"13","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Content.js":"14"},{"size":517,"mtime":1612341188793,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1612182737510,"results":"17","hashOfConfig":"16"},{"size":1490,"mtime":1613028457868,"results":"18","hashOfConfig":"16"},{"size":411,"mtime":1613038346476,"results":"19","hashOfConfig":"16"},{"size":3631,"mtime":1613114859698,"results":"20","hashOfConfig":"16"},{"size":4635,"mtime":1613037728839,"results":"21","hashOfConfig":"16"},{"size":2103,"mtime":1613029840701,"results":"22","hashOfConfig":"16"},{"size":4806,"mtime":1613030013873,"results":"23","hashOfConfig":"16"},{"size":2077,"mtime":1613029913736,"results":"24","hashOfConfig":"16"},{"size":300,"mtime":1613038583220,"results":"25","hashOfConfig":"16"},{"size":380,"mtime":1613027904062,"results":"26","hashOfConfig":"16"},{"size":268,"mtime":1613029338522,"results":"27","hashOfConfig":"16"},{"size":754,"mtime":1613028677667,"results":"28","hashOfConfig":"16"},{"size":109,"mtime":1613039087542,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1wkq6ky",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"D:\\mern\\mern-shop\\project\\frontend\\src\\index.js",[],["67","68"],"D:\\mern\\mern-shop\\project\\frontend\\src\\reportWebVitals.js",[],"D:\\mern\\mern-shop\\project\\frontend\\src\\App.js",["69"],"import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Header from './container/Header'\r\nimport CustsLoginForm from './pages/CustsLoginForm'\r\nimport CustsSignUpForm from './pages/CustsSignUpForm';\r\nimport ShopLoginForm from './pages/ShopLoginForm'\r\nimport ShopSignUpForm from './pages/ShopSignUpForm'\r\nconst loading = (\r\n  <div className=\"pt-3 text-center\">\r\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\r\n  </div>\r\n)\r\n\r\nconst Layout = React.lazy(() => import('./container/Layout'));\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n          <React.Suspense fallback={loading}>\r\n            <Switch>\r\n              <Route exact path=\"/custs/login\" name=\"Customer Login Page\" component={CustsLoginForm} />\r\n              <Route exact path=\"/shop/login\" name=\"Shopkeeper Login Page\" component={ShopLoginForm} />\r\n              <Route exact path=\"/custs/signup\" name=\"Customer Register Page\" component={CustsSignUpForm} />\r\n              <Route exact path=\"/shop/signup\" name=\"Customer Register Page\" component={ShopSignUpForm} />\r\n              {/* <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>} />\r\n              <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>} /> */}\r\n              <Route path=\"/\" name=\"Home\" render={props => <Layout {...props}/>} />\r\n            </Switch>\r\n          </React.Suspense>\r\n      </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Layout.js",[],"D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Header.js",["70","71","72","73","74","75","76","77","78","79","80"],"D:\\mern\\mern-shop\\project\\frontend\\src\\pages\\CustsSignUpForm.js",["81","82","83"],"import React, { useEffect } from \"react\";\r\nimport { Formik, Form, useField, useFormikContext } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport styled from \"@emotion/styled\";\r\n// import \"./CustsSignUpForm.css\";\r\n\r\nconst MyTextInput = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst MyCheckbox = ({ children, ...props }) => {\r\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\r\n  return (\r\n    <>\r\n      <label className=\"checkbox\">\r\n        <input {...field} {...props} type=\"checkbox\" />\r\n        {children}\r\n      </label>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n// Styled components ....\r\nconst StyledSelect = styled.select`\r\n  color: var(--blue);\r\n`;\r\n\r\nconst StyledErrorMessage = styled.div`\r\n  font-size: 12px;\r\n  color: var(--red-600);\r\n  width: 400px;\r\n  margin-top: 0.25rem;\r\n  &:before {\r\n    content: \"❌ \";\r\n    font-size: 10px;\r\n  }\r\n  @media (prefers-color-scheme: dark) {\r\n    color: var(--red-300);\r\n  }\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst MySelect = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel>\r\n      <StyledSelect {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <StyledErrorMessage>{meta.error}</StyledErrorMessage>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n// And now we can use these\r\nconst CustsSignUpForm = () => {\r\n  return (\r\n    <>\r\n      <h1>Sign Up as a Customer</h1>\r\n      <Formik\r\n        initialValues={{\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          email: \"\",\r\n          acceptedTerms: false, // added for our checkbox\r\n          jobType: \"\", // added for our select\r\n          phNumber: \"\",\r\n        }}\r\n        validationSchema={Yup.object({\r\n          firstName: Yup.string()\r\n            .max(15, \"Must be 15 characters or less\")\r\n            .required(\"Required\"),\r\n          lastName: Yup.string()\r\n            .max(20, \"Must be 20 characters or less\")\r\n            .required(\"Required\"),\r\n          email: Yup.string()\r\n            .email(\"Invalid email addresss`\")\r\n            .required(\"Required\"),\r\n          phNumber: Yup.string()\r\n            .max(10, \"Must be 10 characters\")\r\n            .min(10, \"Must be 10 characters\")\r\n            .required(\"Required\"),\r\n          acceptedTerms: Yup.boolean()\r\n            .required(\"Required\")\r\n            .oneOf([true], \"You must accept the terms and conditions.\"),\r\n          jobType: Yup.string()\r\n            // specify the set of valid values for job type\r\n            // @see http://bit.ly/yup-mixed-oneOf\r\n            .oneOf([\"Hadapsar\", \"Wanowrie\", \"Dhankawadi\"], \"Invalid Area\")\r\n            .required(\"Required\"),\r\n        })}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          await new Promise((r) => setTimeout(r, 500));\r\n          setSubmitting(false);\r\n        }}\r\n      >\r\n        <Form>\r\n          <MyTextInput\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your name...\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter your email...\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Phone Number\"\r\n            name=\"phNumber\"\r\n            type=\"text\"\r\n            placeholder=\"0000000000\"\r\n          />\r\n\r\n          <MyTextInput\r\n            label=\"Pin Code\"\r\n            name=\"pin\"\r\n            type=\"text\"\r\n            placeholder=\"000000\"\r\n          />\r\n          <MyCheckbox name=\"acceptedTerms\">\r\n            I accept the terms and conditions\r\n          </MyCheckbox>\r\n\r\n          <button type=\"submit\">Submit</button>\r\n        </Form>\r\n      </Formik>\r\n\r\n      <p>\r\n        Already have an account?? <a href=\"/custs/login\">Sign In </a>Instead\r\n      </p>\r\n    </>\r\n  );\r\n};\r\nexport default CustsSignUpForm;\r\n","D:\\mern\\mern-shop\\project\\frontend\\src\\pages\\ShopLoginForm.js",["84","85","86","87","88","89","90"],"import React from \"react\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport * as Yup from \"yup\";\r\nimport \"./ShopLoginForm.css\";\r\n\r\nconst ShopLoginForm = () => (\r\n  <Formik\r\n    initialValues={{ email: \"\", password: \"\" }}\r\n    validate={(values) => {\r\n      const errors = {};\r\n      if (!values.email) {\r\n        errors.email = \"Required\";\r\n      } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n      ) {\r\n        errors.email = \"Invalid email address\";\r\n      }\r\n      return errors;\r\n    }}\r\n    onSubmit={(values, { setSubmitting }) => {\r\n      setTimeout(() => {\r\n        console.log(\"Logging in\", values);\r\n        setSubmitting(false);\r\n      }, 500);\r\n    }}\r\n  >\r\n    {(props) => {\r\n      const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        isSubmitting,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n      } = props;\r\n\r\n      console.log(\"Heelo\");\r\n\r\n      return (\r\n        <form onSubmit={handleSubmit} className=\"shop_login\">\r\n          <h1 className=\"shop_login_text\">Shopkeeper Login</h1>\r\n          <label className=\"shop_login_label\" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your email\"\r\n            className=\"shop_input\"\r\n          />\r\n\r\n          <label className=\"shop_login_label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            className=\"shop_input\"\r\n          />\r\n\r\n          <button\r\n            className=\"shop_login_btn\"\r\n            type=\"submit\"\r\n            disabled={isSubmitting}\r\n          >\r\n            Login\r\n          </button>\r\n\r\n          <p>\r\n            Don't have an account?? <a href=\"/shop/signup\">SignUp </a>Instead\r\n          </p>\r\n        </form>\r\n      );\r\n    }}\r\n  </Formik>\r\n);\r\n\r\nexport default ShopLoginForm;\r\n","D:\\mern\\mern-shop\\project\\frontend\\src\\pages\\ShopSignUpForm.js",["91","92","93"],"import React, { useEffect } from \"react\";\r\nimport { Formik, Form, useField, useFormikContext } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport styled from \"@emotion/styled\";\r\n// import './ShopSignUpForm.css'\r\n\r\nconst MyTextInput = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst MyCheckbox = ({ children, ...props }) => {\r\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\r\n  return (\r\n    <>\r\n      <label className=\"checkbox\">\r\n        <input {...field} {...props} type=\"checkbox\" />\r\n        {children}\r\n      </label>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n// Styled components ....\r\nconst StyledSelect = styled.select`\r\n  color: var(--blue);\r\n`;\r\n\r\nconst StyledErrorMessage = styled.div`\r\n  font-size: 12px;\r\n  color: var(--red-600);\r\n  width: 400px;\r\n  margin-top: 0.25rem;\r\n  &:before {\r\n    content: \"❌ \";\r\n    font-size: 10px;\r\n  }\r\n  @media (prefers-color-scheme: dark) {\r\n    color: var(--red-300);\r\n  }\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst MySelect = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel>\r\n      <StyledSelect {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <StyledErrorMessage>{meta.error}</StyledErrorMessage>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n// And now we can use these\r\nconst ShopSignUpForm = () => {\r\n  return (\r\n    <>\r\n      <h1>Sign Up as a Shopkeeper</h1>\r\n      <Formik\r\n        initialValues={{\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          email: \"\",\r\n          acceptedTerms: false, // added for our checkbox\r\n          jobType: \"\", // added for our select\r\n          phNumber: \"\",\r\n        }}\r\n        validationSchema={Yup.object({\r\n          firstName: Yup.string()\r\n            .max(15, \"Must be 15 characters or less\")\r\n            .required(\"Required\"),\r\n          lastName: Yup.string()\r\n            .max(20, \"Must be 20 characters or less\")\r\n            .required(\"Required\"),\r\n          email: Yup.string()\r\n            .email(\"Invalid email addresss`\")\r\n            .required(\"Required\"),\r\n          phNumber: Yup.string()\r\n            .max(10, \"Must be 10 characters\")\r\n            .min(10, \"Must be 10 characters\")\r\n            .required(\"Required\"),\r\n          acceptedTerms: Yup.boolean()\r\n            .required(\"Required\")\r\n            .oneOf([true], \"You must accept the terms and conditions.\"),\r\n          jobType: Yup.string()\r\n            // specify the set of valid values for job type\r\n            // @see http://bit.ly/yup-mixed-oneOf\r\n            .oneOf([\"Hadapsar\", \"Wanowrie\", \"Dhankawadi\"], \"Invalid Area\")\r\n            .required(\"Required\"),\r\n        })}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          await new Promise((r) => setTimeout(r, 500));\r\n          setSubmitting(false);\r\n        }}\r\n      >\r\n        <Form>\r\n          <MyTextInput\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your name...\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Shop Name\"\r\n            name=\"shopname\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your shop name...\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter your email...\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Phone Number\"\r\n            name=\"phNumber\"\r\n            type=\"text\"\r\n            placeholder=\"0000000000\"\r\n          />\r\n\r\n          <MyTextInput\r\n            label=\"Pin Code\"\r\n            name=\"pin\"\r\n            type=\"text\"\r\n            placeholder=\"000000\"\r\n          />\r\n          <MyCheckbox name=\"acceptedTerms\">\r\n            I accept the terms and conditions\r\n          </MyCheckbox>\r\n\r\n          <button type=\"submit\">Submit</button>\r\n        </Form>\r\n      </Formik>\r\n\r\n      <p>\r\n        Already have an account?? <a href=\"/shop/login\">Sign In </a>Instead\r\n      </p>\r\n    </>\r\n  );\r\n};\r\nexport default ShopSignUpForm;\r\n","D:\\mern\\mern-shop\\project\\frontend\\src\\pages\\CustsLoginForm.js",["94","95","96","97","98","99","100"],"import React from \"react\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport * as Yup from \"yup\";\r\nimport \"./CustsLoginForm.css\";\r\n\r\nconst CustsLoginForm = () => (\r\n  <Formik\r\n    initialValues={{ email: \"\", password: \"\" }}\r\n    validate={(values) => {\r\n      const errors = {};\r\n      if (!values.email) {\r\n        errors.email = \"Required\";\r\n      } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n      ) {\r\n        errors.email = \"Invalid email address\";\r\n      }\r\n      return errors;\r\n    }}\r\n    onSubmit={(values, { setSubmitting }) => {\r\n      setTimeout(() => {\r\n        console.log(\"Logging in\", values);\r\n        setSubmitting(false);\r\n      }, 500);\r\n    }}\r\n  >\r\n    {(props) => {\r\n      const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        isSubmitting,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n      } = props;\r\n\r\n      return (\r\n        <form onSubmit={handleSubmit} className=\"cust_login\">\r\n          <h1 className=\"cust_login_text\">Customer Login</h1>\r\n\r\n          <label className=\"cust_login_label\" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your email\"\r\n            className=\"cust_input\"\r\n          />\r\n\r\n          <label className=\"cust_login_label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            className=\"cust_input\"\r\n          />\r\n\r\n          <button\r\n            className=\"cust_login_btn\"\r\n            type=\"submit\"\r\n            disabled={isSubmitting}\r\n          >\r\n            Login\r\n          </button>\r\n\r\n          <p>\r\n            Don't have an account?? <a href=\"/custs/signup\">Sign Up </a>Instead\r\n          </p>\r\n        </form>\r\n      );\r\n    }}\r\n  </Formik>\r\n);\r\n\r\nexport default CustsLoginForm;\r\n","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\index.js",[],"D:\\mern\\mern-shop\\project\\frontend\\src\\contexts\\SearchContext.js",["101"],"import React,{createContext, useState} from 'react';\r\n\r\nexport const SearchContext = createContext();\r\n\r\nconst SearchContextProvider = (props) => {\r\n    const [items,setItems] = useState([\r\n    ])\r\n    return ( \r\n        <SearchContext.Provider value={{items}}>\r\n            {props.children}\r\n        </SearchContext.Provider>\r\n     );\r\n}\r\n \r\nexport default SearchContextProvider;","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Footer.js",["102","103"],"import React, { useState, useContext } from \"react\";\r\n\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer>\r\n        <p>Copyright © 2021 Mern INC. All rights reserved</p>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Sidebar.js",["104","105","106","107","108","109","110","111","112","113","114","115"],"import React, { useState, useContext } from \"react\";\r\n\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport \"./Sidebar.css\";\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <>\r\n      <div className=\"sidebar\">\r\n        <p align=\"center\">List of items in cart</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Content.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":14},{"ruleId":"120","severity":1,"message":"124","line":5,"column":10,"nodeType":"122","messageId":"123","endLine":5,"endColumn":21},{"ruleId":"120","severity":1,"message":"125","line":6,"column":16,"nodeType":"122","messageId":"123","endLine":6,"endColumn":24},{"ruleId":"120","severity":1,"message":"126","line":9,"column":8,"nodeType":"122","messageId":"123","endLine":9,"endColumn":14},{"ruleId":"120","severity":1,"message":"127","line":10,"column":8,"nodeType":"122","messageId":"123","endLine":10,"endColumn":12},{"ruleId":"120","severity":1,"message":"128","line":11,"column":8,"nodeType":"122","messageId":"123","endLine":11,"endColumn":16},{"ruleId":"120","severity":1,"message":"129","line":12,"column":8,"nodeType":"122","messageId":"123","endLine":12,"endColumn":12},{"ruleId":"120","severity":1,"message":"130","line":19,"column":10,"nodeType":"122","messageId":"123","endLine":19,"endColumn":15},{"ruleId":"120","severity":1,"message":"131","line":21,"column":8,"nodeType":"122","messageId":"123","endLine":21,"endColumn":12},{"ruleId":"120","severity":1,"message":"132","line":22,"column":8,"nodeType":"122","messageId":"123","endLine":22,"endColumn":19},{"ruleId":"120","severity":1,"message":"133","line":25,"column":8,"nodeType":"122","messageId":"123","endLine":25,"endColumn":13},{"ruleId":"120","severity":1,"message":"134","line":28,"column":8,"nodeType":"122","messageId":"123","endLine":28,"endColumn":19},{"ruleId":"120","severity":1,"message":"135","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":26},{"ruleId":"120","severity":1,"message":"136","line":2,"column":34,"nodeType":"122","messageId":"123","endLine":2,"endColumn":50},{"ruleId":"120","severity":1,"message":"137","line":60,"column":7,"nodeType":"122","messageId":"123","endLine":60,"endColumn":15},{"ruleId":"120","severity":1,"message":"138","line":4,"column":13,"nodeType":"122","messageId":"123","endLine":4,"endColumn":27},{"ruleId":"120","severity":1,"message":"139","line":5,"column":13,"nodeType":"122","messageId":"123","endLine":5,"endColumn":16},{"ruleId":"120","severity":1,"message":"140","line":31,"column":9,"nodeType":"122","messageId":"123","endLine":31,"endColumn":15},{"ruleId":"120","severity":1,"message":"141","line":32,"column":9,"nodeType":"122","messageId":"123","endLine":32,"endColumn":16},{"ruleId":"120","severity":1,"message":"142","line":33,"column":9,"nodeType":"122","messageId":"123","endLine":33,"endColumn":15},{"ruleId":"120","severity":1,"message":"143","line":35,"column":9,"nodeType":"122","messageId":"123","endLine":35,"endColumn":21},{"ruleId":"120","severity":1,"message":"144","line":36,"column":9,"nodeType":"122","messageId":"123","endLine":36,"endColumn":19},{"ruleId":"120","severity":1,"message":"135","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":26},{"ruleId":"120","severity":1,"message":"136","line":2,"column":34,"nodeType":"122","messageId":"123","endLine":2,"endColumn":50},{"ruleId":"120","severity":1,"message":"137","line":60,"column":7,"nodeType":"122","messageId":"123","endLine":60,"endColumn":15},{"ruleId":"120","severity":1,"message":"138","line":4,"column":13,"nodeType":"122","messageId":"123","endLine":4,"endColumn":27},{"ruleId":"120","severity":1,"message":"139","line":5,"column":13,"nodeType":"122","messageId":"123","endLine":5,"endColumn":16},{"ruleId":"120","severity":1,"message":"140","line":31,"column":9,"nodeType":"122","messageId":"123","endLine":31,"endColumn":15},{"ruleId":"120","severity":1,"message":"141","line":32,"column":9,"nodeType":"122","messageId":"123","endLine":32,"endColumn":16},{"ruleId":"120","severity":1,"message":"142","line":33,"column":9,"nodeType":"122","messageId":"123","endLine":33,"endColumn":15},{"ruleId":"120","severity":1,"message":"143","line":35,"column":9,"nodeType":"122","messageId":"123","endLine":35,"endColumn":21},{"ruleId":"120","severity":1,"message":"144","line":36,"column":9,"nodeType":"122","messageId":"123","endLine":36,"endColumn":19},{"ruleId":"120","severity":1,"message":"145","line":6,"column":18,"nodeType":"122","messageId":"123","endLine":6,"endColumn":26},{"ruleId":"120","severity":1,"message":"146","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"147","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":37},{"ruleId":"120","severity":1,"message":"146","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"147","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":37},{"ruleId":"120","severity":1,"message":"148","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":24},{"ruleId":"120","severity":1,"message":"149","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":18},{"ruleId":"120","severity":1,"message":"124","line":5,"column":10,"nodeType":"122","messageId":"123","endLine":5,"endColumn":21},{"ruleId":"120","severity":1,"message":"150","line":6,"column":10,"nodeType":"122","messageId":"123","endLine":6,"endColumn":14},{"ruleId":"120","severity":1,"message":"151","line":7,"column":13,"nodeType":"122","messageId":"123","endLine":7,"endColumn":20},{"ruleId":"120","severity":1,"message":"152","line":8,"column":13,"nodeType":"122","messageId":"123","endLine":8,"endColumn":20},{"ruleId":"120","severity":1,"message":"126","line":9,"column":8,"nodeType":"122","messageId":"123","endLine":9,"endColumn":14},{"ruleId":"120","severity":1,"message":"127","line":10,"column":8,"nodeType":"122","messageId":"123","endLine":10,"endColumn":12},{"ruleId":"120","severity":1,"message":"128","line":11,"column":8,"nodeType":"122","messageId":"123","endLine":11,"endColumn":16},{"ruleId":"120","severity":1,"message":"129","line":12,"column":8,"nodeType":"122","messageId":"123","endLine":12,"endColumn":12},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'IconContext' is defined but never used.","'Redirect' is defined but never used.","'Button' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'Fade' is defined but never used.","'items' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'login' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'useEffect' is defined but never used.","'useFormikContext' is defined but never used.","'MySelect' is assigned a value but never used.","'EmailValidator' is defined but never used.","'Yup' is defined but never used.","'values' is assigned a value but never used.","'touched' is assigned a value but never used.","'errors' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleBlur' is assigned a value but never used.","'setItems' is assigned a value but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'SearchIcon' is defined but never used.","'Link' is defined but never used.","'FaIcons' is defined but never used.","'AiIcons' is defined but never used.","no-global-assign","no-unsafe-negation"]