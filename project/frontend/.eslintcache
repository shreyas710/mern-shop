[{"D:\\mern\\mern-shop\\project\\frontend\\src\\index.js":"1","D:\\mern\\mern-shop\\project\\frontend\\src\\reportWebVitals.js":"2","D:\\mern\\mern-shop\\project\\frontend\\src\\App.js":"3","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Layout.js":"4","D:\\mern\\mern-shop\\project\\frontend\\src\\pages\\CustsSignUpForm.js":"5","D:\\mern\\mern-shop\\project\\frontend\\src\\pages\\CustsLoginForm.js":"6","D:\\mern\\mern-shop\\project\\frontend\\src\\pages\\ShopLoginForm.js":"7","D:\\mern\\mern-shop\\project\\frontend\\src\\pages\\ShopSignUpForm.js":"8","D:\\mern\\mern-shop\\project\\frontend\\src\\contexts\\SearchContext.js":"9","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\index.js":"10","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Sidebar\\Sidebar.js":"11","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Content\\Content.js":"12","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Header\\Header.js":"13","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Footer\\Footer.js":"14","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Content\\CarouselComponent.js":"15"},{"size":560,"mtime":1613210280894,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1612182737510,"results":"18","hashOfConfig":"17"},{"size":1523,"mtime":1613199135793,"results":"19","hashOfConfig":"17"},{"size":425,"mtime":1613214001593,"results":"20","hashOfConfig":"17"},{"size":5686,"mtime":1613197643431,"results":"21","hashOfConfig":"17"},{"size":2065,"mtime":1613197643421,"results":"22","hashOfConfig":"17"},{"size":2091,"mtime":1613197643438,"results":"23","hashOfConfig":"17"},{"size":5802,"mtime":1613197643453,"results":"24","hashOfConfig":"17"},{"size":380,"mtime":1613027904062,"results":"25","hashOfConfig":"17"},{"size":248,"mtime":1613199146360,"results":"26","hashOfConfig":"17"},{"size":754,"mtime":1613198868728,"results":"27","hashOfConfig":"17"},{"size":257,"mtime":1613213496235,"results":"28","hashOfConfig":"17"},{"size":3868,"mtime":1613215371783,"results":"29","hashOfConfig":"17"},{"size":268,"mtime":1613198851235,"results":"30","hashOfConfig":"17"},{"size":3850,"mtime":1613216333099,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1wkq6ky",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\mern\\mern-shop\\project\\frontend\\src\\index.js",[],["71","72"],"D:\\mern\\mern-shop\\project\\frontend\\src\\reportWebVitals.js",[],"D:\\mern\\mern-shop\\project\\frontend\\src\\App.js",[],"D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Layout.js",[],"D:\\mern\\mern-shop\\project\\frontend\\src\\pages\\CustsSignUpForm.js",["73","74","75"],"import React, { useEffect } from \"react\";\r\nimport { Formik, Form, useField, useFormikContext } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport styled from \"@emotion/styled\";\r\nimport \"./CustsLoginSignUpForm.css\";\r\n// import \"./CustsSignUpForm.css\";\r\n\r\nconst MyTextInput = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst MyCheckbox = ({ children, ...props }) => {\r\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\r\n  return (\r\n    <>\r\n      <label className=\"checkbox\">\r\n        <input {...field} {...props} type=\"checkbox\" />\r\n        {children}\r\n      </label>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n// Styled components ....\r\nconst StyledSelect = styled.select`\r\n  color: var(--blue);\r\n`;\r\n\r\nconst StyledErrorMessage = styled.div`\r\n  font-size: 12px;\r\n  color: var(--red-600);\r\n  width: 400px;\r\n  margin-top: 0.25rem;\r\n  &:before {\r\n    content: \"❌ \";\r\n    font-size: 10px;\r\n  }\r\n  @media (prefers-color-scheme: dark) {\r\n    color: var(--red-300);\r\n  }\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst MySelect = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel>\r\n      <StyledSelect {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <StyledErrorMessage>{meta.error}</StyledErrorMessage>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n// And now we can use these\r\nconst CustsSignUpForm = () => {\r\n  return (\r\n    <>\r\n      \r\n      <Formik\r\n        initialValues={{\r\n          Name: \"\",\r\n          pin: \"\",\r\n          email: \"\",\r\n          acceptedTerms: false, // added for our checkbox\r\n          jobType: \"\", // added for our select\r\n          phNumber: \"\",\r\n        }}\r\n        validationSchema={Yup.object({\r\n          Name: Yup.string()\r\n            .max(15, \"Must be 15 characters or less\")\r\n            .required(\"Required\"),\r\n          pin: Yup.string()\r\n            .max(6, \"Must be equal to 6 digits\")\r\n            .required(\"Required\"),\r\n          email: Yup.string()\r\n            .email(\"Invalid email addresss`\")\r\n            .required(\"Required\"),\r\n          phNumber: Yup.string()\r\n            .max(10, \"Must be 10 characters\")\r\n            .min(10, \"Must be 10 characters\")\r\n            .required(\"Required\"),\r\n          acceptedTerms: Yup.boolean()\r\n            .required(\"Required\")\r\n            .oneOf([true], \"You must accept the terms and conditions.\"),\r\n          // jobType: Yup.string()\r\n          //   // specify the set of valid values for job type\r\n          //   // @see http://bit.ly/yup-mixed-oneOf\r\n          //   .oneOf([\"Hadapsar\", \"Wanowrie\", \"Dhankawadi\"], \"Invalid Area\")\r\n          //   .required(\"Required\"),\r\n        })}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          await new Promise((r) => setTimeout(r, 500));\r\n          setSubmitting(false);\r\n        }}\r\n      >\r\n        <Form className=\"cust\">\r\n        <h1 className=\"cust_text\">Sign Up as a Customer</h1>\r\n\r\n          <MyTextInput\r\n            label=\"Name\"\r\n            name=\"Name\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Your Name\"\r\n            className=\"cust_input\"\r\n          />\r\n          \r\n          <label className=\"cust_login_label\" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your email\"\r\n            className=\"cust_input\"\r\n          />\r\n          \r\n          <MyTextInput\r\n            label=\"Phone Number\"\r\n            name=\"phNumber\"\r\n            type=\"text\"\r\n            placeholder=\"0000000000\"\r\n            className=\"cust_input\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Pin Code\"\r\n            name=\"pin\"\r\n            type=\"text\"\r\n            placeholder=\"000000\"\r\n            className=\"cust_input\"\r\n          />\r\n\r\n          <label className=\"cust_login_label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            className=\"cust_input\"\r\n          /> \r\n\r\n          <label className=\"cust_login_label\" htmlFor=\"password\">\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            id=\"confirmPassword\"\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            className=\"cust_input\"\r\n          />   \r\n          \r\n          <MyCheckbox name=\"acceptedTerms\">\r\n             I accept the terms and conditions\r\n          </MyCheckbox>\r\n          <br></br>\r\n          \r\n\r\n          <button type=\"submit\" className=\"cust_btn\" >Submit</button>\r\n\r\n          <p>\r\n          Already have an account?? <a href=\"/custs/login\">Sign In </a>Instead\r\n          </p>\r\n\r\n        </Form>\r\n      </Formik>\r\n\r\n      \r\n    </>\r\n  );\r\n};\r\nexport default CustsSignUpForm;\r\n","D:\\mern\\mern-shop\\project\\frontend\\src\\pages\\CustsLoginForm.js",["76","77","78","79","80","81","82"],"import React from \"react\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport * as Yup from \"yup\";\r\nimport \"./CustsLoginSignUpForm.css\";\r\n\r\nconst CustsLoginForm = () => (\r\n  <Formik\r\n    initialValues={{ email: \"\", password: \"\" }}\r\n    validate={(values) => {\r\n      const errors = {};\r\n      if (!values.email) {\r\n        errors.email = \"Required\";\r\n      } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n      ) {\r\n        errors.email = \"Invalid email address\";\r\n      }\r\n      return errors;\r\n    }}\r\n    onSubmit={(values, { setSubmitting }) => {\r\n      setTimeout(() => {\r\n        console.log(\"Logging in\", values);\r\n        setSubmitting(false);\r\n      }, 500);\r\n    }}\r\n  >\r\n    {(props) => {\r\n      const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        isSubmitting,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n      } = props;\r\n\r\n      return (\r\n        <form onSubmit={handleSubmit} className=\"cust\">\r\n          <h1 className=\"cust_text\">Customer Login</h1>\r\n\r\n          <label className=\"cust_login_label\" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your email\"\r\n            className=\"cust_input\"\r\n          />\r\n\r\n          <label className=\"cust_login_label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            className=\"cust_input\"\r\n          />\r\n\r\n          <button\r\n            className=\"cust_btn\"\r\n            type=\"submit\"\r\n            disabled={isSubmitting}\r\n          >\r\n            Login\r\n          </button>\r\n\r\n          <p>\r\n            Don't have an account?? <a href=\"/custs/signup\">Sign Up </a>Instead\r\n          </p>\r\n        </form>\r\n      );\r\n    }}\r\n  </Formik>\r\n);\r\n\r\nexport default CustsLoginForm;\r\n","D:\\mern\\mern-shop\\project\\frontend\\src\\pages\\ShopLoginForm.js",["83","84","85","86","87","88","89"],"import React from \"react\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as EmailValidator from \"email-validator\";\r\nimport * as Yup from \"yup\";\r\nimport \"./ShopLoginSignUpForm.css\";\r\n\r\nconst ShopLoginForm = () => (\r\n  <Formik\r\n    initialValues={{ email: \"\", password: \"\" }}\r\n    validate={(values) => {\r\n      const errors = {};\r\n      if (!values.email) {\r\n        errors.email = \"Required\";\r\n      } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n      ) {\r\n        errors.email = \"Invalid email address\";\r\n      }\r\n      return errors;\r\n    }}\r\n    onSubmit={(values, { setSubmitting }) => {\r\n      setTimeout(() => {\r\n        console.log(\"Logging in\", values);\r\n        setSubmitting(false);\r\n      }, 500);\r\n    }}\r\n  >\r\n    {(props) => {\r\n      const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        isSubmitting,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n      } = props;\r\n\r\n      console.log(\"Heelo\");\r\n\r\n      return (\r\n        <form onSubmit={handleSubmit} className=\"shop\">\r\n          <h1 className=\"shop_text\">Shopkeeper Login</h1>\r\n          \r\n          <label className=\"shop_label\" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your email\"\r\n            className=\"shop_input\"\r\n          />\r\n\r\n          <label className=\"shop_label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            className=\"shop_input\"\r\n          />\r\n\r\n          <button\r\n            className=\"shop_btn\"\r\n            type=\"submit\"\r\n            disabled={isSubmitting}\r\n          >\r\n            Login\r\n          </button>\r\n\r\n          <p>\r\n            Don't have an account?? <a href=\"/shop/signup\">SignUp </a>Instead\r\n          </p>\r\n        </form>\r\n      );\r\n    }}\r\n  </Formik>\r\n);\r\n\r\nexport default ShopLoginForm;\r\n","D:\\mern\\mern-shop\\project\\frontend\\src\\pages\\ShopSignUpForm.js",["90","91","92"],"import React, { useEffect } from \"react\";\r\nimport { Formik, Form, useField, useFormikContext } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport styled from \"@emotion/styled\";\r\nimport './ShopLoginSignUpForm.css'\r\n\r\nconst MyTextInput = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <label htmlFor={props.id || props.name}>{label}</label>\r\n      <input className=\"text-input\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst MyCheckbox = ({ children, ...props }) => {\r\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\r\n  return (\r\n    <>\r\n      <label className=\"checkbox\">\r\n        <input {...field} {...props} type=\"checkbox\" />\r\n        {children}\r\n      </label>\r\n      {meta.touched && meta.error ? (\r\n        <div className=\"error\">{meta.error}</div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n// Styled components ....\r\nconst StyledSelect = styled.select`\r\n  color: var(--blue);\r\n`;\r\n\r\nconst StyledErrorMessage = styled.div`\r\n  font-size: 12px;\r\n  color: var(--red-600);\r\n  width: 400px;\r\n  margin-top: 0.25rem;\r\n  &:before {\r\n    content: \"❌ \";\r\n    font-size: 10px;\r\n  }\r\n  @media (prefers-color-scheme: dark) {\r\n    color: var(--red-300);\r\n  }\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst MySelect = ({ label, ...props }) => {\r\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\r\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel>\r\n      <StyledSelect {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <StyledErrorMessage>{meta.error}</StyledErrorMessage>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\n// And now we can use these\r\nconst ShopSignUpForm = () => {\r\n  return (\r\n    <>\r\n      \r\n      <Formik\r\n        initialValues={{\r\n          Name: \"\",\r\n          shopName:\"\",\r\n          email: \"\",\r\n          pin:\"\",\r\n          acceptedTerms: false, // added for our checkbox\r\n          //jobType: \"\", // added for our select\r\n          phNumber: \"\",\r\n        }}\r\n        validationSchema={Yup.object({\r\n          Name: Yup.string()\r\n            .max(15, \"Must be 15 characters or less\")\r\n            .required(\"Required\"),\r\n          shopName: Yup.string()\r\n            .max(30, \"Must be 30 characters or less\")\r\n            .required(\"Required\"),\r\n          email: Yup.string()\r\n            .email(\"Invalid email addresss`\")\r\n            .required(\"Required\"),\r\n          pin: Yup.string()\r\n            .max(\"Should be equal to 6 digits\"),\r\n          phNumber: Yup.string()\r\n            .max(10, \"Must be 10 characters\")\r\n            .min(10, \"Must be 10 characters\")\r\n            .required(\"Required\"),\r\n          acceptedTerms: Yup.boolean()\r\n            .required(\"Required\")\r\n            .oneOf([true], \"You must accept the terms and conditions.\"),\r\n          // jobType: Yup.string()\r\n          //   // specify the set of valid values for job type\r\n          //   // @see http://bit.ly/yup-mixed-oneOf\r\n          //   .oneOf([\"Hadapsar\", \"Wanowrie\", \"Dhankawadi\"], \"Invalid Area\")\r\n          //   .required(\"Required\"),\r\n        })}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          await new Promise((r) => setTimeout(r, 500));\r\n          setSubmitting(false);\r\n        }}\r\n      >\r\n        <Form className=\"shop\">\r\n\r\n        <h1 className=\"shop_text\">Sign Up as a Shopkeeper</h1>\r\n          <MyTextInput\r\n            label=\"Name\"\r\n            name=\"Name\"\r\n            type=\"text\"\r\n            placeholder=\"Enter Your Name\"\r\n            className=\"shop_input\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Shop Name\"\r\n            name=\"shopName\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your Shop Name\"\r\n            className=\"shop_input\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            className=\"shop_input\"\r\n          />\r\n          <MyTextInput\r\n            label=\"Phone Number\"\r\n            name=\"phNumber\"\r\n            type=\"text\"\r\n            placeholder=\"0000000000\"\r\n            className=\"shop_input\"\r\n          />\r\n\r\n          <MyTextInput\r\n            label=\"Pin Code\"\r\n            name=\"pin\"\r\n            type=\"text\"\r\n            placeholder=\"000000\"\r\n            className=\"shop_input\"\r\n          />\r\n\r\n          <label className=\"shop_label\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            className=\"shop_input\"\r\n          />\r\n\r\n          <label className=\"shop_label\" htmlFor=\"password\">\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            id=\"confirmPassword\"\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            className=\"shop_input\"\r\n          />\r\n          \r\n          <MyCheckbox name=\"acceptedTerms\">\r\n            I accept the terms and conditions\r\n          </MyCheckbox>\r\n\r\n          <button type=\"submit\" className=\"shop_btn\">Submit</button>\r\n\r\n          <p>\r\n        Already have an account?? <a href=\"/shop/login\">Sign In </a>Instead\r\n      </p>\r\n        </Form>\r\n      </Formik>\r\n\r\n      \r\n    </>\r\n  );\r\n};\r\nexport default ShopSignUpForm;\r\n","D:\\mern\\mern-shop\\project\\frontend\\src\\contexts\\SearchContext.js",["93"],"import React,{createContext, useState} from 'react';\r\n\r\nexport const SearchContext = createContext();\r\n\r\nconst SearchContextProvider = (props) => {\r\n    const [items,setItems] = useState([\r\n    ])\r\n    return ( \r\n        <SearchContext.Provider value={{items}}>\r\n            {props.children}\r\n        </SearchContext.Provider>\r\n     );\r\n}\r\n \r\nexport default SearchContextProvider;","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\index.js",[],"D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Sidebar\\Sidebar.js",["94","95","96","97","98","99","100","101","102","103","104","105"],"import React, { useState, useContext } from \"react\";\r\n\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport \"./Sidebar.css\";\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <>\r\n      <div className=\"sidebar\">\r\n        <p align=\"center\">List of items in cart</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Content\\Content.js",[],"D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Header\\Header.js",["106","107","108","109","110","111","112","113","114","115","116","117","118","119","120"],"import React, { useState, useContext } from \"react\";\r\n\r\nimport \"./Header.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { SearchContext } from \"../../contexts/SearchContext\";\r\nimport {\r\n\tButtonDropdown,\r\n\tDropdownToggle,\r\n\tDropdownMenu,\r\n\tDropdownItem,\r\n} from \"reactstrap\";\r\n\r\nconst Header = (props) => {\r\n\tconst [sidebar, setSidebar] = useState(false);\r\n\tconst showSidebar = () => setSidebar(!sidebar);\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst { items } = useContext(SearchContext);\r\n\r\n\tconst open = Boolean(anchorEl);\r\n\tconst handleClick = (event) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t};\r\n\tconst login = () => {\r\n\t\tthis.props.history.push(\"./login\");\r\n\t};\r\n\tconst handleClose = () => {\r\n\t\tsetAnchorEl(null);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<header className=\"navbar\">\r\n\t\t\t\t<Link to=\"#\" className=\"menu-bars\">\r\n\t\t\t\t\t<FaIcons.FaBars\r\n\t\t\t\t\t\tonClick={showSidebar}\r\n\t\t\t\t\t\tstyle={{ marginLeft: \"30px\" }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Link>\r\n\t\t\t\t<form\r\n\t\t\t\t\tstyle={{ marginRight: \"auto\", marginLeft: \"auto\" }}\r\n\t\t\t\t\tclassName=\"search_form\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Search a product...\"\r\n\t\t\t\t\t\t\tclassName=\"search_input\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<SearchIcon className=\"search_icon\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t\t{/* <button  style={{display:\"inline-block\",justifyContent:\"flex-end\"}}><ShoppingCartIcon /></button> */}\r\n\r\n\t\t\t\t<div className=\"dropdown\" style={{ marginRight: \"15px\" }}>\r\n\t\t\t\t\t<button className=\"dropbtn\">Customer</button>\r\n\t\t\t\t\t<div className=\"dropdown-content\">\r\n\t\t\t\t\t\t<Link to=\"/custs/login\">\r\n\t\t\t\t\t\t\t<p style={{ paddingTop: \"15px\" }}>Login</p>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link to=\"/custs/signup\">\r\n\t\t\t\t\t\t\t<p style={{ paddingTop: \"15px\" }}>SignUp</p>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* <Button\r\n          style={{ justifyContent: \"flex-end\" }}\r\n          aria-controls=\"fade-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClick}\r\n        >\r\n          Shopkeeper\r\n        </Button>\r\n        <Menu\r\n          id=\"fade-menu\"\r\n          anchorEl={anchorEl}\r\n          keepMounted\r\n          open={open}\r\n          onClose={handleClose}\r\n          TransitionComponent={Fade}\r\n        >\r\n          <MenuItem onClick={handleClose}>SignUp</MenuItem>\r\n          <MenuItem onClick={handleClose} linkButton={true} href=\"http://localhost:3000/login\" primaryText=\"Login\" />\r\n          <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n        </Menu> */}\r\n\r\n\t\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t\t<button className=\"dropbtn\">Shopkeeper</button>\r\n\t\t\t\t\t<div className=\"dropdown-content\">\r\n\t\t\t\t\t\t<Link to=\"/shop/login\">\r\n\t\t\t\t\t\t\t<p style={{ paddingTop: \"15px\" }}>Login</p>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<Link to=\"/shop/signup\">\r\n\t\t\t\t\t\t\t<p style={{ paddingTop: \"15px\" }}>SignUp</p>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\r\n\t\t\t<nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\r\n\t\t\t\t<ul className=\"nav-menu-items\" onClick={showSidebar}>\r\n\t\t\t\t\t<li className=\"navbar-toggle\">\r\n\t\t\t\t\t\t<Link to=\"#\" className=\"menu-bars\">\r\n\t\t\t\t\t\t\t<AiIcons.AiOutlineClose />\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t{/* {SidebarData.map((item, index) => {\r\n                return (\r\n                <li key={index} className={item.cName}>\r\n                    <Link to={item.path}>\r\n                    {item.icon}\r\n                    <span>{item.title}</span>\r\n                    </Link>\r\n                </li>\r\n                );\r\n            })} */}\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Footer\\Footer.js",["121","122"],"import React, { useState, useContext } from \"react\";\r\n\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <footer>\r\n        <p>Copyright © 2021 Mern INC. All rights reserved</p>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","D:\\mern\\mern-shop\\project\\frontend\\src\\container\\Content\\CarouselComponent.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"131","line":2,"column":34,"nodeType":"129","messageId":"130","endLine":2,"endColumn":50},{"ruleId":"127","severity":1,"message":"132","line":61,"column":7,"nodeType":"129","messageId":"130","endLine":61,"endColumn":15},{"ruleId":"127","severity":1,"message":"133","line":4,"column":13,"nodeType":"129","messageId":"130","endLine":4,"endColumn":27},{"ruleId":"127","severity":1,"message":"134","line":5,"column":13,"nodeType":"129","messageId":"130","endLine":5,"endColumn":16},{"ruleId":"127","severity":1,"message":"135","line":31,"column":9,"nodeType":"129","messageId":"130","endLine":31,"endColumn":15},{"ruleId":"127","severity":1,"message":"136","line":32,"column":9,"nodeType":"129","messageId":"130","endLine":32,"endColumn":16},{"ruleId":"127","severity":1,"message":"137","line":33,"column":9,"nodeType":"129","messageId":"130","endLine":33,"endColumn":15},{"ruleId":"127","severity":1,"message":"138","line":35,"column":9,"nodeType":"129","messageId":"130","endLine":35,"endColumn":21},{"ruleId":"127","severity":1,"message":"139","line":36,"column":9,"nodeType":"129","messageId":"130","endLine":36,"endColumn":19},{"ruleId":"127","severity":1,"message":"133","line":4,"column":13,"nodeType":"129","messageId":"130","endLine":4,"endColumn":27},{"ruleId":"127","severity":1,"message":"134","line":5,"column":13,"nodeType":"129","messageId":"130","endLine":5,"endColumn":16},{"ruleId":"127","severity":1,"message":"135","line":31,"column":9,"nodeType":"129","messageId":"130","endLine":31,"endColumn":15},{"ruleId":"127","severity":1,"message":"136","line":32,"column":9,"nodeType":"129","messageId":"130","endLine":32,"endColumn":16},{"ruleId":"127","severity":1,"message":"137","line":33,"column":9,"nodeType":"129","messageId":"130","endLine":33,"endColumn":15},{"ruleId":"127","severity":1,"message":"138","line":35,"column":9,"nodeType":"129","messageId":"130","endLine":35,"endColumn":21},{"ruleId":"127","severity":1,"message":"139","line":36,"column":9,"nodeType":"129","messageId":"130","endLine":36,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"131","line":2,"column":34,"nodeType":"129","messageId":"130","endLine":2,"endColumn":50},{"ruleId":"127","severity":1,"message":"132","line":60,"column":7,"nodeType":"129","messageId":"130","endLine":60,"endColumn":15},{"ruleId":"127","severity":1,"message":"140","line":6,"column":18,"nodeType":"129","messageId":"130","endLine":6,"endColumn":26},{"ruleId":"127","severity":1,"message":"141","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"142","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":37},{"ruleId":"127","severity":1,"message":"143","line":3,"column":8,"nodeType":"129","messageId":"130","endLine":3,"endColumn":24},{"ruleId":"127","severity":1,"message":"144","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":18},{"ruleId":"127","severity":1,"message":"145","line":5,"column":10,"nodeType":"129","messageId":"130","endLine":5,"endColumn":21},{"ruleId":"127","severity":1,"message":"146","line":6,"column":10,"nodeType":"129","messageId":"130","endLine":6,"endColumn":14},{"ruleId":"127","severity":1,"message":"147","line":7,"column":13,"nodeType":"129","messageId":"130","endLine":7,"endColumn":20},{"ruleId":"127","severity":1,"message":"148","line":8,"column":13,"nodeType":"129","messageId":"130","endLine":8,"endColumn":20},{"ruleId":"127","severity":1,"message":"149","line":9,"column":8,"nodeType":"129","messageId":"130","endLine":9,"endColumn":14},{"ruleId":"127","severity":1,"message":"150","line":10,"column":8,"nodeType":"129","messageId":"130","endLine":10,"endColumn":12},{"ruleId":"127","severity":1,"message":"151","line":11,"column":8,"nodeType":"129","messageId":"130","endLine":11,"endColumn":16},{"ruleId":"127","severity":1,"message":"152","line":12,"column":8,"nodeType":"129","messageId":"130","endLine":12,"endColumn":12},{"ruleId":"127","severity":1,"message":"145","line":5,"column":10,"nodeType":"129","messageId":"130","endLine":5,"endColumn":21},{"ruleId":"127","severity":1,"message":"153","line":6,"column":16,"nodeType":"129","messageId":"130","endLine":6,"endColumn":24},{"ruleId":"127","severity":1,"message":"149","line":9,"column":8,"nodeType":"129","messageId":"130","endLine":9,"endColumn":14},{"ruleId":"127","severity":1,"message":"150","line":10,"column":8,"nodeType":"129","messageId":"130","endLine":10,"endColumn":12},{"ruleId":"127","severity":1,"message":"151","line":11,"column":8,"nodeType":"129","messageId":"130","endLine":11,"endColumn":16},{"ruleId":"127","severity":1,"message":"152","line":12,"column":8,"nodeType":"129","messageId":"130","endLine":12,"endColumn":12},{"ruleId":"127","severity":1,"message":"154","line":15,"column":2,"nodeType":"129","messageId":"130","endLine":15,"endColumn":16},{"ruleId":"127","severity":1,"message":"155","line":16,"column":2,"nodeType":"129","messageId":"130","endLine":16,"endColumn":16},{"ruleId":"127","severity":1,"message":"156","line":17,"column":2,"nodeType":"129","messageId":"130","endLine":17,"endColumn":14},{"ruleId":"127","severity":1,"message":"157","line":18,"column":2,"nodeType":"129","messageId":"130","endLine":18,"endColumn":14},{"ruleId":"127","severity":1,"message":"158","line":25,"column":10,"nodeType":"129","messageId":"130","endLine":25,"endColumn":15},{"ruleId":"127","severity":1,"message":"159","line":27,"column":8,"nodeType":"129","messageId":"130","endLine":27,"endColumn":12},{"ruleId":"127","severity":1,"message":"160","line":28,"column":8,"nodeType":"129","messageId":"130","endLine":28,"endColumn":19},{"ruleId":"127","severity":1,"message":"161","line":31,"column":8,"nodeType":"129","messageId":"130","endLine":31,"endColumn":13},{"ruleId":"127","severity":1,"message":"162","line":34,"column":8,"nodeType":"129","messageId":"130","endLine":34,"endColumn":19},{"ruleId":"127","severity":1,"message":"141","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"142","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":37},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useFormikContext' is defined but never used.","'MySelect' is assigned a value but never used.","'EmailValidator' is defined but never used.","'Yup' is defined but never used.","'values' is assigned a value but never used.","'touched' is assigned a value but never used.","'errors' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleBlur' is assigned a value but never used.","'setItems' is assigned a value but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'SearchIcon' is defined but never used.","'IconContext' is defined but never used.","'Link' is defined but never used.","'FaIcons' is defined but never used.","'AiIcons' is defined but never used.","'Button' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'Fade' is defined but never used.","'Redirect' is defined but never used.","'ButtonDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'items' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'login' is assigned a value but never used.","'handleClose' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]